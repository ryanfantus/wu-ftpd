/****************************************************************************  
 
  Copyright (c) 1999-2003 WU-FTPD Development Group.  
  All rights reserved.
  
  Portions Copyright (c) 1980, 1985, 1988, 1989, 1990, 1991, 1993, 1994
    The Regents of the University of California.
  Portions Copyright (c) 1993, 1994 Washington University in Saint Louis.
  Portions Copyright (c) 1996, 1998 Berkeley Software Design, Inc.
  Portions Copyright (c) 1989 Massachusetts Institute of Technology.
  Portions Copyright (c) 1998 Sendmail, Inc.
  Portions Copyright (c) 1983, 1995, 1996, 1997 Eric P.  Allman.
  Portions Copyright (c) 1997 by Stan Barber.
  Portions Copyright (c) 1997 by Kent Landfield.
  Portions Copyright (c) 1991, 1992, 1993, 1994, 1995, 1996, 1997
    Free Software Foundation, Inc.  
 
  Use and distribution of this software and its source code are governed 
  by the terms and conditions of the WU-FTPD Software License ("LICENSE").
 
  If you did not receive a copy of the license, it may be obtained online
  at http://www.wu-ftpd.info/license.html.
 
  $Id: config.h.in,v 1.9 2011/10/20 22:58:10 wmaton Exp $
 
****************************************************************************/

/*
 * Configuration file for autoconf - will be modified by configure
 */

#undef _GNU_SOURCE
#undef _FILE_OFFSET_BITS
#undef HAVE_FEATURES_H
#if defined(HAVE_FEATURES_H)
#  include <features.h>
#endif /* defined(HAVE_FEATURES_H) */ 
#undef HAVE_FCNTL_H
#undef HAVE_DIRENT_H
#undef HAVE_REGEX_H
#undef TIME_WITH_SYS_TIME
#undef HAVE_SYS_TIME_H
#undef HAVE_TIME_H
#undef HAVE_MNTENT_H
#undef HAVE_SYS_MNTENT_H
#undef HAVE_SYS_MNTTAB_H
#undef HAVE_NDIR_H
#undef HAVE_STRING_H
#undef HAVE_SYS_DIR_H
#undef HAVE_SYS_NDIR_H
#undef HAVE_SYS_QUOTA_H
#undef HAVE_SYS_FS_UFS_QUOTA_H
#undef HAVE_UFS_QUOTA_H
#undef HAVE_JFS_QUOTA_H
#undef HAVE_UFS_UFS_QUOTA_H
#undef HAVE_LINUX_QUOTA_H
#undef HAVE_STDLIB_H
#undef HAVE_UNISTD_H
#undef HAVE_SYS_TYPES_H
#undef HAVE_GLOB_H
#undef HAVE_GRP_H
#undef HAVE_SHADOW_H
#undef HAVE_VMSDIR_H

#undef QUOTA_INODE
#undef QUOTA_DEVICE
#undef QSORT_IS_VOID

#undef HAVE_SIGPROCMASK
#undef HAVE_VSNPRINTF
#undef HAVE_DIRFD
#undef HAVE_FLOCK
#undef HAVE_FTW
#undef HAVE_GETCWD
#undef HAVE_GETDTABLESIZE
#undef HAVE_GETRLIMIT
#undef HAVE_PSTAT
#undef HAVE_LSTAT
#undef HAVE_VPRINTF
#undef HAVE_SNPRINTF
#undef HAVE_REGEX
#undef HAVE_REGEXEC
#undef HAVE_SETSID
#undef HAVE_MEMMOVE
#undef HAVE_STRTOUL
#undef HAVE_SIGLIST
#undef HAVE_MKTEMP
#undef HAVE_MKSTEMP
#undef HAVE_STRCASESTR
#undef HAVE_STRCASESTR_PROTOTYPE
#undef HAVE_STRLCAT
#undef HAVE_STRLCAT_PROTOTYPE
#undef HAVE_STRLCPY
#undef HAVE_STRLCPY_PROTOTYPE
#undef FACILITY

#undef HAVE_LIMITS_H
#undef HAVE_VALUES_H
#undef HAVE_BSD_BSD_H
#undef HAVE_SYS_PARAM_H
#undef NEED_LIMITS_H
#undef NEED_VALUES_H
#undef NEED_BSD_BSD_H
#undef NEED_SYS_PARAM_H
#if defined(HAVE_SYS_PARAM_H) && defined(NEED_SYS_PARAM_H)
#  include <sys/param.h>
#endif /* defined(HAVE_SYS_PARAM_H) && defined(NEED_SYS_PARAM_H) */ 
#if defined(HAVE_VALUES_H) && defined(NEED_VALUES_H)
#  include <values.h>
#endif /* defined(HAVE_VALUES_H) && defined(NEED_VALUES_H) */ 
#if defined(HAVE_LIMITS_H) && defined(NEED_LIMITS_H)
#  include <limits.h>
#endif /* defined(HAVE_LIMITS_H) && defined(NEED_LIMITS_H) */ 
#if defined(HAVE_BSD_BSD_H) && defined(NEED_BSD_BSD_H)
#  include <bsd/bsd.h>
#endif /* defined(HAVE_BSD_BSD_H) && defined(NEED_BSD_BSD_H) */ 
#undef NBBY

#undef SIGNAL_TYPE
#undef HAVE_SETUID
#undef HAVE_SETEUID
#undef HAVE_SETREUID
#undef HAVE_SETRESUID
#undef HAVE_SETEGID
#undef HAVE_SETREGID
#undef HAVE_SETRESGID
#undef HAVE_ST_BLKSIZE
#undef HAVE_SYSCONF
#undef HAVE_SYS_SYSTEMINFO_H
#undef HAVE_PATHS_H
#undef HAVE_SYSLOG_H
#undef HAVE_SYS_SYSLOG_H
#undef HAVE_FCHDIR
#undef HAVE_QUOTACTL
#undef HAS_OLDSTYLE_GETMNTENT
#undef HAS_PW_EXPIRE
#undef SHADOW_PASSWORD
#undef AUTOCONF
#undef L_FORMAT
#undef T_FORMAT
#undef PW_UID_FORMAT
#undef GR_GID_FORMAT

#undef HAVE_UT_UT_HOST
#undef HAVE_UT_UT_EXIT_E_TERMINATION

/* Here instead of everywhere: */
#include <stdio.h>
#include <stdlib.h>
#if defined(HAVE_UNISTD_H)
#  include <unistd.h>
#endif /* defined(HAVE_UNISTD_H) */ 

/* Newer systems will have seteuid/setegid */
/* Older systems may have the BSD setreuid/setregid */
/* HP/UX has setresuid/setresgid */
/* Some SCO systems appearently have none of this.
   so if HAVE_SETUID is not defined we'll presume it's
   all needed since we're compiling support/sco.c */

#if defined(HAVE_SETUID)

#  if !defined(HAVE_SETEUID)
#    if defined(HAVE_SETREUID)
#      define seteuid(euid) setreuid(-1,(euid))
#    else /* !(defined(HAVE_SETREUID)) */ 
#      if defined(HAVE_SETRESUID)
#        define seteuid(euid) setresuid(-1,(euid),-1)
#      else /* !(defined(HAVE_SETRESUID)) */ 
#        error No seteuid() functions.
#      endif /* !(defined(HAVE_SETRESUID)) */ 
#    endif /* !(defined(HAVE_SETREUID)) */ 
#  endif /* !defined(HAVE_SETEUID) */ 

#  if !defined(HAVE_SETEGID)
#    if defined(HAVE_SETREGID)
#      define setegid(egid) setregid(-1,(egid))
#    else /* !(defined(HAVE_SETREGID)) */ 
#      if defined(HAVE_SETRESGID)
#        define setegid(egid) setresgid(-1,(egid),-1)
#      else /* !(defined(HAVE_SETRESGID)) */ 
#        error No setegid() functions.
#      endif /* !(defined(HAVE_SETRESGID)) */ 
#    endif /* !(defined(HAVE_SETREGID)) */ 
#  endif /* !defined(HAVE_SETEGID) */ 

#endif /* defined(HAVE_SETUID) */ 

#if !defined(HAVE_FCHDIR)
#  define HAS_NO_FCHDIR 1
#endif /* !defined(HAVE_FCHDIR) */ 
#if !defined(HAVE_QUOTACTL)
#  define HAS_NO_QUOTACTL 1
#endif /* !defined(HAVE_QUOTACTL) */ 
#if defined(HAVE_SYS_SYSTEMINFO_H)
#  define HAVE_SYSINFO 1
#endif /* defined(HAVE_SYS_SYSTEMINFO_H) */ 
#if !defined(HAVE_SETSID)
#  define NO_SETSID 1
#endif /* !defined(HAVE_SETSID) */ 

#undef LONG_UID

#if !defined(HAVE_MEMMOVE)
#  define memmove(a,b,c) bcopy(b,a,c)
#endif /* !defined(HAVE_MEMMOVE) */ 
#if !defined(HAVE_STRTOUL)
#  define strtoul(a,b,c) (unsigned long)strtol(a,b,c)
#endif /* !defined(HAVE_STRTOUL) */ 

#if !defined(RAND_MAX)
#  define RAND_MAX 2147483647
#endif /* !defined(RAND_MAX) */ 

#undef USE_PAM

#if defined(__SVR4) && !defined(SVR4)
#  define SVR4
#endif /* defined(__SVR4) && !defined(SVR4) */ 

#include "../config.h"

/*
 * Socket macros which help with socket structure manipulation in a mixed
 * IPv4 / IPv6 environment.
 */
#if defined(INET6)
#  if defined(HAVE__SS_FAMILY)
#    define ss_family __ss_family
#  endif /* defined(HAVE__SS_FAMILY) */ 
#  define SOCKSTORAGE sockaddr_storage
#  define SOCK_FAMILY(ss) ((ss).ss_family)
#  define SOCK_PORT(ss) ((ss).ss_family == AF_INET6 ? \
		     ((struct sockaddr_in6 *)&(ss))->sin6_port : \
		     ((struct sockaddr_in *)&(ss))->sin_port)
#  define SOCK_LEN(ss) ((ss).ss_family == AF_INET6 ? \
		    sizeof(struct sockaddr_in6) : sizeof(struct sockaddr_in))
#  define SOCK_ADDR(ss) ((ss).ss_family == AF_INET6 ? \
		     (void *)&((struct sockaddr_in6 *)&(ss))->sin6_addr : \
		     (void *)&((struct sockaddr_in *)&(ss))->sin_addr)
#  define SET_SOCK_FAMILY(ss, family) (SOCK_FAMILY(ss) = (family))
#  define SET_SOCK_PORT(ss, port) \
		((ss).ss_family == AF_INET6 ? \
		 (((struct sockaddr_in6 *)&(ss))->sin6_port = (port)) : \
		 (((struct sockaddr_in *)&(ss))->sin_port = (port)))
#  define SET_SOCK_ADDR4(ss, addr) ((void)(sock_set_inaddr(&(ss), (addr))))
#  define SET_SOCK_ADDR_ANY(ss) \
		((void)((ss).ss_family == AF_INET6 ? \
		 (void)(((struct sockaddr_in6 *)&(ss))->sin6_addr = \
			in6addr_any) : \
		 (void)(((struct sockaddr_in *)&(ss))->sin_addr.s_addr = \
			htonl(INADDR_ANY))))
#  define SET_SOCK_SCOPE(dst, src) sock_set_scope(&(dst), &(src))
#else /* !(defined(INET6)) */ 
#  define SOCKSTORAGE sockaddr_in
#  define SOCK_FAMILY(sin) ((sin).sin_family)
#  define SOCK_PORT(sin) ((sin).sin_port)
#  define SOCK_LEN(sin) (sizeof(sin))
#  define SOCK_ADDR(sin) ((void *)&(sin).sin_addr)
#  define SET_SOCK_FAMILY(sin, family) (SOCK_FAMILY(sin) = (family))
#  define SET_SOCK_PORT(sin, port) ((sin).sin_port = (port))
#  define SET_SOCK_ADDR4(sin, addr) ((sin).sin_addr = (addr))
#  define SET_SOCK_ADDR_ANY(sin) ((sin).sin_addr.s_addr = htonl(INADDR_ANY))
#endif /* !(defined(INET6)) */ 
