/****************************************************************************  
 
  Copyright (c) 1999-2003 WU-FTPD Development Group.  
  All rights reserved.
  
  Portions Copyright (c) 1980, 1985, 1988, 1989, 1990, 1991, 1993, 1994
    The Regents of the University of California.
  Portions Copyright (c) 1993, 1994 Washington University in Saint Louis.
  Portions Copyright (c) 1996, 1998 Berkeley Software Design, Inc.
  Portions Copyright (c) 1989 Massachusetts Institute of Technology.
  Portions Copyright (c) 1998 Sendmail, Inc.
  Portions Copyright (c) 1983, 1995, 1996, 1997 Eric P.  Allman.
  Portions Copyright (c) 1997 by Stan Barber.
  Portions Copyright (c) 1997 by Kent Landfield.
  Portions Copyright (c) 1991, 1992, 1993, 1994, 1995, 1996, 1997
    Free Software Foundation, Inc.  
 
  Use and distribution of this software and its source code are governed 
  by the terms and conditions of the WU-FTPD Software License ("LICENSE").
 
  If you did not receive a copy of the license, it may be obtained online
  at http://www.wu-ftpd.info/license.html.
 
  $Id: config.h.noac,v 1.9 2011/10/20 22:58:08 wmaton Exp $
 
****************************************************************************/

/* 
 * Top level config file... you'll probably not need to modify any of this.
 * $Id: config.h.noac,v 1.9 2011/10/20 22:58:08 wmaton Exp $
 * In the future, a lot more definable features will be here (and this
 * will all make sense...)
 */

/*
 * allow "upload" keyword in ftpaccess
 */

#define UPLOAD

/*
 * allow "overwrite" keyword in ftpaccess.
 */

#define OVERWRITE

/*
 * allow "allow/deny" for individual users.
 */

#define HOST_ACCESS

/*
 * log failed login attempts
 */

#define LOG_FAILED

/*
 * log login attempts that fail because of class connection
 * limits.  Busy servers may want to prevent this logging
 * since it can fill up the log file and put a high load on
 * syslog.
 */
#define LOG_TOOMANY

/*
 * allow use of private file.  (for site group and site gpass)
 * NO_PRIVATE
 * Define this if you don't want to use the private authentication databases.
 */

#undef NO_PRIVATE

/*
 * Try once more on failed DNS lookups (to allow far away connections 
 * which might resolve slowly)
 */

#define	DNS_TRYAGAIN

/*
 * ANON_ONLY 
 * Permit only anonymous logins... disables all other type
 */

#undef ANON_ONLY

/*
 * PARANOID
 * Disable "questionable" functions
 */

#undef PARANOID

/*
 * Better PARANOID options.
 * Allows finer control than PARANOID.
 * See README.paranoid for more information on these options.
 *
 * 2000/07/15 Sylvain Robitaille: The following defaults are "somewhat
 *                                paranoid".  Defining PARANOID will
 *                                result in the following, which
 *                                emulates known behaviour:
 *
 *            #undef  ENABLE_DELETE
 *            #undef  ENABLE_OVERWRITE
 *            #undef  DISABLE_STRICT_HOMEDIR
 *            #define DISABLE_SITE 1
 */

#define ENABLE_DELETE
#define ENABLE_OVERWRITE
#undef DISABLE_STRICT_HOMEDIR

#undef DISABLE_SITE_UMASK
#undef DISABLE_SITE_CHMOD
#undef DISABLE_SITE_IDLE
#undef  ENABLE_SITE_EXEC
#undef DISABLE_SITE_ALIAS
#undef DISABLE_SITE_GROUPS
#undef DISABLE_SITE_CDPATH
#undef DISABLE_SITE_CHECKMETHOD
#undef DISABLE_SITE_CHECKSUM
#undef DISABLE_SITE

/*
 * 2000/07/17 Sylvain Robitaille: Defining PARANOID overrides these.
 */
#ifdef  PARANOID
#undef  ENABLE_DELETE
#undef  ENABLE_OVERWRITE
#undef  DISABLE_STRICT_HOMEDIR
#define DISABLE_SITE 1
#endif

/*
 * USE_LASTLOG
 * Track logins via lastlog file.
 * 2000/10/19 Sylvain Robitaille
 */

#undef USE_LASTLOG

/*
 * SKEY
 * Add SKEY support -- REQUIRES S/Key libraries
 *
 * If you wish to use some S/Key libraries such as
 * <URL:http://www.sparc.spb.su/solaris/skey/> then you will need to define
 * the variable SKEY_RFC2289 in addition to the variable SKEY.
 */

#undef SKEY
#undef SKEY_RFC2289

/*
 * OPIE
 * One-time Passwords In Everything (OPIE)
 * Add OPIE support -- REQUIRES OPIE libraries
 */

#if !defined (LINUX)		/* Linux autodetects OPIE */
#undef OPIE
#endif

/*
 * ALTERNATE_CD
 * Causes "cd ~" to return the chroot-relative directory instead of the
 * real directory.
 */
#define ALTERNATE_CD

/*
 * UNRESTRICTED_CHMOD
 * If defined, any valid value for the mode will be accepted.
 * Otherwise, only values between 0 and 777 are accepted.
 */
#undef UNRESTRICTED_CHMOD

/*
 * USE_RFC931
 * Define this if you want to use RFC 931 'authentication' - this improves
 * the logging at the cost of a possible slight delay in connection.
 */
#undef USE_RFC931

/*
 * BASE_HOMEDIR
 * You can specify a directory under which real users' home directories
 * must reside. Logins will be refused if the home directory is not
 * below the directory specified here.
 */
#undef BASE_HOMEDIR

/*
 * ALT_HOMEDIR
 * You can specify a directory to which real users may still login if
 * their own home directory fails either the STRICT_HOMEDIR or the
 * BASE_HOMEDIR test.
 */
#undef ALT_HOMEDIR

/*
 * BUFFER_SIZE
 * You can specify the buffer size for binary transfers; the defaults
 * are often far too small for efficiency.
 */

#undef BUFFER_SIZE

/*
 * If you want to specify the syslog facility, you should modify CFLAGS in
 * the appropriate src/makefile/Makefile.*.
 */

/* If you want to set the paths where the configuration files, pids and logs
 * are stored, you should inspect src/pathnames.h and modify the appropriate
 * src/config/config.*.
 */

/*
 * DAEMON
 * If ftpd called with -s or -S then run as a standalone daemon listening on
 * the ftp port.  This can speed up ftpd response as all ftpd then needs to
 * do is fork off a copy to handle an incoming request.  Under inetd 
 * a new copy has to be opened and exec'd.
 */
#define DAEMON

/*
 * MAX_BACKLOG
 * Only used in DAEMON mode.
 * This is second parameter to listen.  It defines the number of incoming
 * processes to allow to backlog, prior to being accept() processing them,
 * before rejecting.
 */
#define MAX_BACKLOG 100

/*
 * MAPPING_CHDIR
 * Keep track of the path the user has chdir'd into and respond with
 * that to pwd commands.  This is to avoid having the absolute disk
 * path returned.  This helps avoid returning dirs like '.1/fred'
 * when lots of disks make up the ftp area.
 */

#define MAPPING_CHDIR

/*
 * THROUGHPUT
 * Keep track of total throughput for the user and limit if required.
 */

#define THROUGHPUT

/*
 * TRANSFER_COUNT
 * Keep track of total bytes for statistics.
 */

#define TRANSFER_COUNT

/*
 * TRANSFER_LIMIT
 * Limit file and bytes transferred in a session.
 */

#ifdef TRANSFER_COUNT
#define TRANSFER_LIMIT
#else
#undef TRANSFER_LIMIT
#endif

/*
 * NO_SUCKING_NEWLINES
 * Don't suppress some extra blank lines on messages and banners.
 */

#undef NO_SUCKING_NEWLINES

/*
 * HELP_CRACKERS
 * Define this to help crackers break into your system by letting them
 * figure out which user names exist to guess passwords on.
 */

#undef HELP_CRACKERS

/*
 * VERBOSE_ERROR_LOGING
 * Log all problems with USER and PASS as well as all rejected commands
 * and denied uploads/downloads.
 */

#define VERBOSE_ERROR_LOGING

/*
 * IGNORE_NOOP
 * Undefine this to let NOOP reset the idle timeout.
 */

#define IGNORE_NOOP

/*
 * CLOSED_VIRTUAL_SERVER
 * Undefine this to allow real and non-owner guests to log in on a virtual
 * server's address.
 */
#define CLOSED_VIRTUAL_SERVER

/*
 * Some people don't like PASV and want to disable it.  Whatever.
 * PORT can be abused to attack other hosts.  Let's give the option to
 * disable one or the other.  We'll ignore DISABLE_PASV if you defined
 * DISABLE_PORT (hey, you gotta have at least one!).
 */
#undef DISABLE_PORT
#undef DISABLE_PASV

/*
 * Define this to suppress messages about PID locks causing the daemon to
 * sleep.  This should only be needed at busy sites.
 */
#undef NO_PID_SLEEP_MSGS

/*
 * Define this to require the remove end of a PASV connection to have the
 * same IP as the control connection.  This limits, but does not eliminate,
 * the risk of PASV port race stealing the connection.  It also is non-RFC
 * compliant, so it may cause problems for some client sites.
 */
#define FIGHT_PASV_PORT_RACE

/*
 * Define this to completely disable anonymous FTP access.
 */
#undef NO_ANONYMOUS_ACCESS

/*
 * Define this to have an ls command compiled into the daemon. That way you
 * don't need to put statically linked ls's into every chroot directory.
 * Note this feature is still experimental.
 */
#undef INTERNAL_LS

/*
 * Define this if you want the internal ls to display UIDs/GIDs rather than
 * user/group names. This is faster, but doesn't look as nice.
 */
#undef LS_NUMERIC_UIDS

/*
 * Define this if you want to hide setuid bits in the internal ls
 * this might be a good idea for security.
 */
#define HIDE_SETUID

/*
 * Undefine this if you don't want to have the possibility to e-mail the
 * administrator on anonymous uploads
 */
#define MAIL_ADMIN

/*
 * Define this to re-enable SITE NEWER.
 *
 * The SITE NEWER feature is the only function using the ftw() and/or
 * treewalk() functions.  Since not all systems include one of these functions,
 * the daemon has (since version 1.0) included the BSD NET-2 version in the
 * support directory.
 *
 * Unfortunately, the BSD NET-2 ftw()/treewalk() functions are not acceptable
 * for use in a production environment.  They leak memory and can overrun
 * buffers.  Rather than try to fix the functions, which would require a
 * complete rewrite, the SITE NEWER feature has been disabled.
 *
 * The intention of SITE NEWER was to enable mirrors to quickly determine which
 * files have changed since the last run.  Since most mirror packages wish to
 * work with all daemons (not just wu-ftpd), and since SITE NEWER is a wu-ftpd
 * only feature, they don't use the feature.  Therefore there seems little
 * reason to continue to support it.
 *
 *                          ***** DISCLAIMER *****
 *
 * RE-ENABLING THIS FEATURE MAKES IT EASY TO CAUSE YOUR SERVER TO GROW UNTIL IT
 * CONSUMES ALL AVAILABLE MEMORY.
 */
#undef SITE_NEWER

/*
 * Define this to revert the NLST command to showing directories.
 *
 * This will cause mget to have errors when it attempts to RETR the
 * directory name (which is not a RETRievable object) but will revert
 * the NLST command enough to quell complains from Solaris command-
 * line FTP client users.
 */
#undef NLST_SHOWS_DIRS

/*
 * Using tcpwrappers (libwrap) in standalone daemon mode.
 *
 * Define LIBWRAP.  If you're using configure, edit src/Makefile
 * to add -lwrap to the ftpd step.  If you're using build, edit
 * src/makefiles/common or the Makefile specific to your system.
 */
#undef LIBWRAP

/*
 * Define this to include IPv6, RFC 1639 (LPRT/LPSV) and RFC 2428 (EPRT/EPSV)
 * support.
 */
#undef INET6

/*
 * support AUTH TLS etc... (requires OpenSSL)
 *  see docs/HOWTO/ssl_and_tls_ftpd.HOWTO
 *
 *  also need to add "-L/usr/local/ssl/lib"      to LFLAGS
 *               and "-lssl -lcrypto"            to LIBES
 *               and "-I/usr/local/ssl/include"  to IFLAGS
 *  (assuming OpenSSL is installed in /usr/local/ssl)
 *  in src/makefiles/Makefile.???
 *
 * the defines do the following
 * USE_TLS - the binary will be capable of using ssl/tls via -z options
 * FORCE_TLS - the binary will only be capable of running with ssl/tls
 * TLS_DEBUG - the "-z debug" parameter will cause a trace.
 */
#undef USE_TLS
#undef FORCE_TLS
#undef TLS_DEBUG

/*
 * support AUTH GSSAPI (requires a GSS-API library and at least
 * one security provider, usually Kerberos V5).
 *  see doc/HOWTO/gssapi_ftpd.HOWTO
 *
 *  also need to add the following changes to the Makefiles
 *   If using MIT Kerberos V5:
 *     add "-L/usr/local/lib -R/usr/local/lib"           to GSSLDFLAGS
 *     and "-lgssapi_krb5 -lkrb5 -lk5crypto -lcom_err"   to GSSLIBS
 *     and "-I/usr/local/include"                        to CPPFLAGS
 *
 *   If using GSS-API and Kerberos included with Solaris 8 and later:
 *     add  "-lgss"                     to GSSLIBS
 *
 * The defines to the following
 * USE_GSS - the binary will be capable of using GSS-API as the 
 *       authentication method.
 * NEED_SYSTEM_GSSAPI_HEADER - when compiling with gcc compiler in Solaris
 *       and using the native Solaris GSS-API software, this must 
 *       be compiled so that gcc finds the correct header file.
 * HAVE_GSS_GET_MECH_TYPE - When compiling against native Solaris GSS-API
 *       this should be defined.  When using MIT (or other) Kerberos
 *       implementations, leave this undefined. 
 * HAVE_GSS_C_NT_HOSTBASED_SERVICE - define if the GSS-API library has
 *       a symbol for "GSS_C_NT_HOSTBASED_SERVICE".  Defined in Solaris,
 *       leave undefined when using MIT.
 * HAVE_STRLCAT - define if your system has a "strlcat" function.
 */
#undef USE_GSS
#undef NEED_SYSTEM_GSSAPI_HEADER
#undef HAVE_GSS_GET_MECH_TYPE
#undef HAVE_GSS_C_NT_HOSTBASED_SERVICE
#undef HAVE_STRLCAT

/* 
 * some SNPRINTF stuff (only used in the SSL/TLS code at the moment)
 *
 * if you are compiling tlsutil.c then one of these must be defined
 *  (you can use this snippet to find out which one if you like)
 *
 *   #include <stdio.h>
 *   int main()
 *      {
 *      char buf[3]; 
 *      int r;
 *      r = snprintf(buf, 3, "123");
 *      if(r < 0)
 *         printf("SNPRINTF_BROKEN\n");
 *      else
 *         if(2 == r)
 *            printf("SNPRINTF_HALFBROKEN\n");
 *         else
 *            if(3 == r)
 *               printf("SNPRINTF_OK\n");
 *            else
 *               printf("SNPRINTF_UNKNOWN - Oops\n");
 *            
 *      return 0;
 *      }
 *
 * Define if snprintf() returns:
 * the number of bytes it wants to write in case of overflow
 */
#undef SNPRINTF_OK
/*
 * Define if snprintf() returns:
 * the number of bytes written (excl. \0) in case of overflow 
 */
#undef SNPRINTF_HALFBROKEN
/*
 * Define if snprintf() returns:
 * -1 in case of overflow 
 */
#undef SNPRINTF_BROKEN
